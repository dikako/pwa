<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="17" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1003775" started-at="2020-06-19T04:02:46Z" finished-at="2020-06-19T04:19:30Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="1003775" started-at="2020-06-19T04:02:46Z" finished-at="2020-06-19T04:19:30Z">
      <class name="testcases.Test_Login">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="2543" started-at="2020-06-19T11:02:47Z" finished-at="2020-06-19T11:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@1593948d]" name="login_alert_password" duration-ms="34219" started-at="2020-06-19T11:02:49Z" data-provider="login_alert_password" finished-at="2020-06-19T11:03:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Password Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_password -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="89" started-at="2020-06-19T11:03:24Z" finished-at="2020-06-19T11:03:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1512" started-at="2020-06-19T11:03:24Z" finished-at="2020-06-19T11:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_password(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.Test_Login@1593948d]" name="login_alert_password" duration-ms="34744" started-at="2020-06-19T11:03:25Z" data-provider="login_alert_password" finished-at="2020-06-19T11:04:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Password Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_password -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="78" started-at="2020-06-19T11:04:00Z" finished-at="2020-06-19T11:04:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1371" started-at="2020-06-19T11:04:00Z" finished-at="2020-06-19T11:04:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@1593948d]" name="login_alert_username" duration-ms="41928" started-at="2020-06-19T11:04:01Z" data-provider="login_alert_username" finished-at="2020-06-19T11:04:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Email Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_username -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="80" started-at="2020-06-19T11:04:43Z" finished-at="2020-06-19T11:04:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1696" started-at="2020-06-19T11:04:43Z" finished-at="2020-06-19T11:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_username(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testcases.Test_Login@1593948d]" name="login_alert_username" duration-ms="36095" started-at="2020-06-19T11:04:45Z" data-provider="login_alert_username" finished-at="2020-06-19T11:05:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8767868768768]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please Try Again Phone Number Is Incorrect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_username -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="116" started-at="2020-06-19T11:05:21Z" finished-at="2020-06-19T11:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1520" started-at="2020-06-19T11:05:21Z" finished-at="2020-06-19T11:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@1593948d]" name="login_alert_popup" duration-ms="33306" started-at="2020-06-19T11:05:23Z" data-provider="login_alert_popup" finished-at="2020-06-19T11:05:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dixosgadpoyt@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_popup -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="115" started-at="2020-06-19T11:05:56Z" finished-at="2020-06-19T11:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1534" started-at="2020-06-19T11:05:56Z" finished-at="2020-06-19T11:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_alert_popup(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Login@1593948d]" name="login_alert_popup" duration-ms="37238" started-at="2020-06-19T11:05:58Z" data-provider="login_alert_popup" finished-at="2020-06-19T11:06:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[628229098776544]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[passwordslah]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User has not been registered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_alert_popup -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="149" started-at="2020-06-19T11:06:35Z" finished-at="2020-06-19T11:06:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1457" started-at="2020-06-19T11:06:35Z" finished-at="2020-06-19T11:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@1593948d]" name="login_succes" duration-ms="39722" started-at="2020-06-19T11:06:37Z" data-provider="login_success" finished-at="2020-06-19T11:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_succes -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="127" started-at="2020-06-19T11:07:17Z" finished-at="2020-06-19T11:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1451" started-at="2020-06-19T11:07:17Z" finished-at="2020-06-19T11:07:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_succes(java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:testcases.Test_Login@1593948d]" name="login_succes" duration-ms="41058" started-at="2020-06-19T11:07:18Z" data-provider="login_success" finished-at="2020-06-19T11:07:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_succes -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="128" started-at="2020-06-19T11:07:59Z" finished-at="2020-06-19T11:07:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1540" started-at="2020-06-19T11:07:59Z" finished-at="2020-06-19T11:08:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@1593948d]" name="login_logout" duration-ms="74252" started-at="2020-06-19T11:08:01Z" data-provider="login_success" finished-at="2020-06-19T11:09:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="83" started-at="2020-06-19T11:09:15Z" finished-at="2020-06-19T11:09:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Login@1593948d]" name="set" is-config="true" duration-ms="1973" started-at="2020-06-19T11:09:15Z" finished-at="2020-06-19T11:09:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout(java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:testcases.Test_Login@1593948d]" name="login_logout" duration-ms="74984" started-at="2020-06-19T11:09:17Z" data-provider="login_success" finished-at="2020-06-19T11:10:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Login@1593948d]" name="done" is-config="true" duration-ms="85" started-at="2020-06-19T11:10:32Z" finished-at="2020-06-19T11:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
      </class> <!-- testcases.Test_Login -->
      <class name="testcases.Test_Integration_Login">
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="1538" started-at="2020-06-19T11:10:32Z" finished-at="2020-06-19T11:10:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_" duration-ms="97085" started-at="2020-06-19T11:10:34Z" data-provider="login_success" finished-at="2020-06-19T11:12:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_ -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="165" started-at="2020-06-19T11:12:11Z" finished-at="2020-06-19T11:12:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="2180" started-at="2020-06-19T11:12:11Z" finished-at="2020-06-19T11:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_" duration-ms="98475" started-at="2020-06-19T11:12:13Z" data-provider="login_success" finished-at="2020-06-19T11:13:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_ -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="115" started-at="2020-06-19T11:13:52Z" finished-at="2020-06-19T11:13:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="1638" started-at="2020-06-19T11:13:52Z" finished-at="2020-06-19T11:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_account" duration-ms="89296" started-at="2020-06-19T11:13:54Z" data-provider="login_success" finished-at="2020-06-19T11:15:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_account -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="87" started-at="2020-06-19T11:15:23Z" finished-at="2020-06-19T11:15:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="1642" started-at="2020-06-19T11:15:23Z" finished-at="2020-06-19T11:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_account(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_account" duration-ms="94945" started-at="2020-06-19T11:15:25Z" data-provider="login_success" finished-at="2020-06-19T11:17:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_account -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="94" started-at="2020-06-19T11:17:00Z" finished-at="2020-06-19T11:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="1551" started-at="2020-06-19T11:17:00Z" finished-at="2020-06-19T11:17:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_history" duration-ms="105280" started-at="2020-06-19T11:17:01Z" data-provider="login_success" finished-at="2020-06-19T11:18:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dikakoko04@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_history -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="93" started-at="2020-06-19T11:18:47Z" finished-at="2020-06-19T11:18:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="set()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="set" is-config="true" duration-ms="1657" started-at="2020-06-19T11:18:47Z" finished-at="2020-06-19T11:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="FAIL" signature="login_logout_from_history(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_history" duration-ms="41098" started-at="2020-06-19T11:18:48Z" data-provider="login_success" finished-at="2020-06-19T11:19:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[082278843303]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dikakoko]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dikakokos]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#action\-history"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.zi5NIn}, goog:chromeOptions: {debuggerAddress: localhost:34923}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: fdf2d9c4f83f3a2b981a62335d5...}
Session ID: fdf2d9c4f83f3a2b981a62335d53b67f
*** Element info: {Using=id, value=action-history}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#action\-history"}
  (Session info: chrome=83.0.4103.61)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MNCTVN05589', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_221'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.61, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.zi5NIn}, goog:chromeOptions: {debuggerAddress: localhost:34923}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: fdf2d9c4f83f3a2b981a62335d5...}
Session ID: fdf2d9c4f83f3a2b981a62335d53b67f
*** Element info: {Using=id, value=action-history}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at object.Button.byId(Button.java:19)
	at testcases.Test_Integration_Login.login_logout_from_history(Test_Integration_Login.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_history -->
        <test-method status="PASS" signature="done()[pri:0, instance:testcases.Test_Integration_Login@1b604f19]" name="done" is-config="true" duration-ms="105" started-at="2020-06-19T11:19:29Z" finished-at="2020-06-19T11:19:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="SKIP" signature="login_logout_from_mylist(java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:testcases.Test_Integration_Login@1b604f19]" name="login_logout_from_mylist" duration-ms="0" started-at="2020-06-19T11:19:30Z" data-provider="login_success" finished-at="2020-06-19T11:19:30Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.io.FileNotFoundException: ..\pwa\src\main\java\data\login.xlsx (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.io.FileNotFoundException: ..\pwa\src\main\java\data\login.xlsx (The system cannot find the file specified)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:163)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
Caused by: java.io.FileNotFoundException: ..\pwa\src\main\java\data\login.xlsx (The system cannot find the file specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at utility.ReadExcel.getCellData(ReadExcel.java:17)
	at testcases.Test_Integration_Login.login_success(Test_Integration_Login.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:137)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_logout_from_mylist -->
      </class> <!-- testcases.Test_Integration_Login -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
